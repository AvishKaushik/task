{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["generateLine","x1","y1","x2","y2","x","y","Array","fill","map","d","i","App","className","geography","geographies","geo","rsmKey","coordinates","stroke","strokeWidth","id","r","textAnchor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.784fd25b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ComposableMap, Geographies, Geography, Marker, Line } from \"react-simple-maps\";\n\nimport './App.css';\n\nfunction generateLine(x1,y1,x2,y2) {\n  var x=(x1-x2);\n  var y=(y1-y2);\n  x=x/361;\n  y=y/361;\n  return new Array(361).fill(1).map((d, i) => {\n    return [x1 - (x*i), y1- (y*i)];\n  });\n}\n\nfunction App() {\n  const geoUrl =\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n  return (\n    <div className=\"App\">\n      <ComposableMap>\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n          }\n        </Geographies>\n        <Line className=\"cline\"\n        coordinates={generateLine(77.216721, 28.644800,115.188919, -8.409518)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(-77.042793, -12.046374,-56.164532, -34.901112)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(115.188919, -8.409518, -56.164532, -34.901112)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(115.188919, -8.409518, 139.745438, 35.658581)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(37.620407, 55.754093, 139.745438, 35.658581)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(37.620407, 55.754093, 2.349014, 48.864716)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(-77.042793, -12.046374, 2.349014, 48.864716)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(77.216721, 28.644800, 31.233334, 30.033333)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(77.216721, 28.644800, 2.349014, 48.864716)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(77.216721, 28.644800, 36.817223, -1.286389)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(31.233334, 30.033333, 3.406448, 6.465422)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(36.817223, -1.286389, 3.406448, 6.465422)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Line className=\"cline\"\n        coordinates={generateLine(-77.042793, -12.046374, 3.406448, 6.465422)}\n        stroke=\"#D0C7FF\"\n        strokeWidth={12}\n        />\n        <Marker id=\"Delhi\" coordinates={[77.216721, 28.644800]}>\n          <circle r={40} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Delhi\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            100,00000\n          </text>\n        </Marker>\n        <Marker id=\"Peru\" coordinates={[-77.042793, -12.046374]}>\n          <circle r={30} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Peru\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            100,000\n          </text>\n        </Marker>\n        <Marker id=\"Egypt\" coordinates={[31.233334, 30.033333]}>\n          <circle r={20} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Egypt\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            60,0000\n          </text>\n        </Marker>\n        <Marker id=\"Kenya\" coordinates={[36.817223, -1.286389]}>\n          <circle r={30} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Kenya\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            10,000\n          </text>\n        </Marker>\n        <Marker id=\"Moscow\" coordinates={[37.620407, 55.754093]}>\n          <circle r={20} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Moscow\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            60,000\n          </text>\n        </Marker>\n        <Marker id=\"Uruguay\" coordinates={[-56.164532, -34.901112]}>\n          <circle r={30} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Uruguay\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            100,000\n          </text>\n        </Marker>\n        <Marker id=\"Indonesia\" coordinates={[115.188919, -8.409518]}>\n          <circle r={30} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Indonesia\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            50,000\n          </text>\n        </Marker>\n        <Marker id=\"Tokyo\" coordinates={[139.745438, 35.658581]}>\n          <circle r={30} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Tokyo\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            500,0000\n          </text>\n        </Marker>\n        <Marker id=\"Nigeria\" coordinates={[3.406448, 6.465422]}>\n          <circle r={20} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Nigeria\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            1000\n          </text>\n        </Marker>\n        <Marker id=\"Paris\" coordinates={[2.349014, 48.864716]}>\n          <circle r={35} fill=\"#D0C7FF\" />\n          <text textAnchor=\"middle\" fill=\"#000\">\n            Paris\n          </text>\n          <text y=\"8\" textAnchor=\"middle\" fill=\"#000\">\n            500,000\n          </text>\n        </Marker>\n      </ComposableMap>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}